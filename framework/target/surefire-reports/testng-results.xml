<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="4" total="9" passed="4" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-08-23T17:08:00 EDT" name="Suite" finished-at="2022-08-23T17:08:48 EDT" duration-ms="47167">
    <groups>
      <group name="regression">
        <method signature="homePageTest.titleValidation()[pri:0, instance:testCases.homePageTest@514646ef]" name="titleValidation" class="testCases.homePageTest"/>
        <method signature="homePageTest.validationOfNavbar()[pri:0, instance:testCases.homePageTest@514646ef]" name="validationOfNavbar" class="testCases.homePageTest"/>
      </group> <!-- regression -->
      <group name="smoke">
        <method signature="LoginWithParamater.loginTest(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:testCases.LoginWithParamater@305ffe9e]" name="loginTest" class="testCases.LoginWithParamater"/>
        <method signature="homePageTest.titleValidation()[pri:0, instance:testCases.homePageTest@514646ef]" name="titleValidation" class="testCases.homePageTest"/>
        <method signature="homePageTest.validationOfNavbar()[pri:0, instance:testCases.homePageTest@514646ef]" name="validationOfNavbar" class="testCases.homePageTest"/>
      </group> <!-- smoke -->
      <group name="sanity">
        <method signature="homePageTest.titleValidation()[pri:0, instance:testCases.homePageTest@514646ef]" name="titleValidation" class="testCases.homePageTest"/>
      </group> <!-- sanity -->
    </groups>
    <test started-at="2022-08-23T17:08:00 EDT" name="Test" finished-at="2022-08-23T17:08:48 EDT" duration-ms="47167">
      <class name="testCases.LoginPageTest">
        <test-method is-config="true" signature="beforesuite()[pri:0, instance:testCases.LoginPageTest@2b30a42c]" started-at="2022-08-23T17:08:00 EDT" name="beforesuite" finished-at="2022-08-23T17:08:00 EDT" duration-ms="60" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforesuite -->
        <test-method is-config="true" signature="mybeforeMethod()[pri:0, instance:testCases.LoginPageTest@2b30a42c]" started-at="2022-08-23T17:08:00 EDT" name="mybeforeMethod" finished-at="2022-08-23T17:08:12 EDT" duration-ms="11499" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mybeforeMethod -->
        <test-method signature="loginTest()[pri:0, instance:testCases.LoginPageTest@2b30a42c]" started-at="2022-08-23T17:08:12 EDT" name="loginTest" finished-at="2022-08-23T17:08:14 EDT" duration-ms="2418" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.LoginPageTest@2b30a42c]" started-at="2022-08-23T17:08:14 EDT" name="tearDown" finished-at="2022-08-23T17:08:15 EDT" duration-ms="950" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:testCases.LoginPageTest@2b30a42c]" started-at="2022-08-23T17:08:48 EDT" name="afterSuite" finished-at="2022-08-23T17:08:48 EDT" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- testCases.LoginPageTest -->
      <class name="testCases.LoginWithParamater">
        <test-method is-config="true" signature="mybeforeMethod()[pri:0, instance:testCases.LoginWithParamater@305ffe9e]" started-at="2022-08-23T17:08:31 EDT" name="mybeforeMethod" finished-at="2022-08-23T17:08:36 EDT" duration-ms="5414" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mybeforeMethod -->
        <test-method signature="loginTest(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:testCases.LoginWithParamater@305ffe9e]" started-at="2022-08-23T17:08:36 EDT" name="loginTest" data-provider="getData" finished-at="2022-08-23T17:08:38 EDT" duration-ms="2016" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[admin123]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Admin test]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.LoginWithParamater@305ffe9e]" started-at="2022-08-23T17:08:38 EDT" name="tearDown" finished-at="2022-08-23T17:08:39 EDT" duration-ms="672" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="mybeforeMethod()[pri:0, instance:testCases.LoginWithParamater@305ffe9e]" started-at="2022-08-23T17:08:39 EDT" name="mybeforeMethod" finished-at="2022-08-23T17:08:45 EDT" duration-ms="5843" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mybeforeMethod -->
        <test-method signature="loginTest(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:testCases.LoginWithParamater@305ffe9e]" started-at="2022-08-23T17:08:45 EDT" name="loginTest" data-provider="getData" finished-at="2022-08-23T17:08:47 EDT" duration-ms="2029" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[administrator]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[khan]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Administrator test]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.LoginWithParamater@305ffe9e]" started-at="2022-08-23T17:08:47 EDT" name="tearDown" finished-at="2022-08-23T17:08:48 EDT" duration-ms="681" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testCases.LoginWithParamater -->
      <class name="testCases.homePageTest">
        <test-method is-config="true" signature="mybeforeMethod()[pri:0, instance:testCases.homePageTest@514646ef]" started-at="2022-08-23T17:08:15 EDT" name="mybeforeMethod" finished-at="2022-08-23T17:08:22 EDT" duration-ms="6267" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mybeforeMethod -->
        <test-method signature="titleValidation()[pri:0, instance:testCases.homePageTest@514646ef]" started-at="2022-08-23T17:08:22 EDT" name="titleValidation" finished-at="2022-08-23T17:08:22 EDT" duration-ms="87" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [FEATURED COURSESs] but found [FEATURED COURSES]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [FEATURED COURSESs] but found [FEATURED COURSES]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at org.testng.Assert.assertEquals(Assert.java:665)
at testCases.homePageTest.titleValidation(homePageTest.java:35)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:32)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:467)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- titleValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.homePageTest@514646ef]" started-at="2022-08-23T17:08:23 EDT" name="tearDown" finished-at="2022-08-23T17:08:24 EDT" duration-ms="831" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="mybeforeMethod()[pri:0, instance:testCases.homePageTest@514646ef]" started-at="2022-08-23T17:08:24 EDT" name="mybeforeMethod" finished-at="2022-08-23T17:08:30 EDT" duration-ms="6079" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mybeforeMethod -->
        <test-method signature="validationOfNavbar()[pri:0, instance:testCases.homePageTest@514646ef]" started-at="2022-08-23T17:08:30 EDT" name="validationOfNavbar" finished-at="2022-08-23T17:08:30 EDT" duration-ms="143" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validationOfNavbar -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.homePageTest@514646ef]" started-at="2022-08-23T17:08:30 EDT" name="tearDown" finished-at="2022-08-23T17:08:31 EDT" duration-ms="885" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testCases.homePageTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
